// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package main

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en_US": &dictionary{index: en_USIndex, data: en_USData},
		"pt":    &dictionary{index: ptIndex, data: ptData},
	}
	fallback := language.MustParse("en-US")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"Topics": 1,
	"Type your query\n\n%s\n\n(esc to quit)\n": 2,
	"Your query":     0,
	"│ Result: %q ├": 3,
}

var en_USIndex = []uint32{ // 5 elements
	0x00000000, 0x0000000b, 0x00000012, 0x0000003d,
	0x00000053,
} // Size: 44 bytes

const en_USData string = "" + // Size: 83 bytes
	"\x02Your query\x02Topics\x04\x00\x01\x0a&\x02Type your query\x0a\x0a%[1]" +
	"s\x0a\x0a(esc to quit)\x02│ Result: %[1]q ├"

var ptIndex = []uint32{ // 5 elements
	0x00000000, 0x0000000d, 0x00000016, 0x00000045,
	0x0000005e,
} // Size: 44 bytes

const ptData string = "" + // Size: 94 bytes
	"\x02Sua consulta\x02Tópicos\x04\x00\x01\x0a*\x02Digite sua consulta\x0a" +
	"\x0a%[1]s\x0a\x0a(esc to quit)\x02│ Resultado: %[1]q ├"

	// Total table size 265 bytes (0KiB); checksum: A99D2252
